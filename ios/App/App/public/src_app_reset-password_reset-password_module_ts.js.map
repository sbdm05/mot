{"version":3,"file":"src_app_reset-password_reset-password_module_ts.js","mappings":"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","sources":["./src/app/reset-password/reset-password-routing.module.ts","./src/app/reset-password/reset-password.module.ts","./src/app/reset-password/reset-password.page.ts","./src/app/services/users.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ResetPasswordPage } from './reset-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResetPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ResetPasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ResetPasswordPageRoutingModule } from './reset-password-routing.module';\n\nimport { ResetPasswordPage } from './reset-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ResetPasswordPageRoutingModule,\n    FormsModule,\n  ],\n  declarations: [ResetPasswordPage],\n})\nexport class ResetPasswordPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UsersService } from '../services/users.service';\nimport { User } from '../user/user';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.page.html',\n  styleUrls: ['./reset-password.page.scss'],\n})\nexport class ResetPasswordPage implements OnInit {\n  id!: number;\n  token!: number;\n  newPwd!: string;\n  user!: User;\n  errorForm = false;\n\n  constructor(\n    //déclencher l'api reset-password\n    private usersService: UsersService,\n    private route: ActivatedRoute\n  ) {\n    // extraire les params\n    this.route.params.subscribe((params) => {\n      this.id = params.id;\n      this.token = params.token;\n\n      this.verifyToken();\n    });\n  }\n\n  ngOnInit() {}\n\n  // rôle\n  verifyToken() {\n    // appel au service reset-password\n    const obj = { id: this.id, token: this.token };\n    this.usersService.resetPassword({ obj }).subscribe((data) => {\n      this.user = data.user;\n      console.log(this.user);\n    });\n  }\n\n  onSubmit() {\n    this.errorForm = false;\n    const temp = this.newPwd.trim();\n    console.log(temp.length);\n\n    // vérification\n    if (temp.length <= 6) {\n      this.errorForm = true;\n      return;\n      // Erreur UI\n      // afficher message d'erreur\n    } else if (!this.user) {\n      console.log('pas de user');\n    } else {\n      this.errorForm = false;\n      // création d'un nouvel objet\n      const obj = {\n        user: this.user,\n        newPwd: temp,\n      };\n      console.log(obj, 'infos à envoyer à saveNewPassword');\n      // appel au service update-user\n      this.usersService.saveNewPassword(obj).subscribe((data) => {\n        console.log(data);\n      });\n    }\n  }\n}\n\n\n/*\n   `${this.urlApi}/api/v1/letters/save-new-password`,\n      obj\n\n*/\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../user/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersService {\n  private urlApi = environment.urlApi;\n\n  constructor(private http: HttpClient) {}\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  //token!: number;\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  private refreshCollection$: BehaviorSubject<any> = new BehaviorSubject<any>(\n    ''\n  );\n\n  // attention sans le typage, on ne récupère pas la valeur dans le subscribe !!!!\n  onSignUp(user): Observable<any> {\n    console.log(user, 'user');\n    return this.http.post<User>(`${this.urlApi}/api/v1/letters`, user);\n  }\n\n  onLogin(user): Observable<any> {\n    // const token = localStorage.getItem('token');\n    // let headers_object = new HttpHeaders().set(\n    //   'Authorization',\n    //   'Bearer ' + token\n    // );\n    console.log(user, 'user');\n    return this.http.post<User>(`${this.urlApi}/api/v1/letters/login`, user);\n    // ).pipe(\n    //   catchError(async (err) => console.log(err))\n    // );\n    // return this.http.post<User>(\n\n    // )\n  }\n\n  // je commente cette fonction pour des tests\n  // getUser(token): Observable<any> {\n  //   const headers = new HttpHeaders()\n  //     .set('content-type', 'application/json')\n  //     .set('Access-Control-Allow-Origin', '*')\n  //     .set('Authorization', 'Bearer ' + token);\n\n  //   return this.http.get('http://localhost:4000/api/v1/letters/user', {\n  //     headers,\n  //   });\n  // }\n\n  // getUser(token) {\n  //   const headers = new HttpHeaders()\n  //     .set('content-type', 'application/json')\n  //     .set('Access-Control-Allow-Origin', '*')\n  //     .set('Authorization', 'Bearer ' + token);\n  //   this.token = token;\n  //   this.refreshCollection(token, headers);\n  //   return this.refreshCollection$;\n  // }\n\n  refreshCollection(token): Observable<any> {\n    // console.log('depuis refreshcollection');\n    const headers = new HttpHeaders()\n      .set('content-type', 'application/json')\n      .set('Access-Control-Allow-Origin', '*')\n      .set('Authorization', 'Bearer ' + token);\n\n    this.http\n      .get(`${this.urlApi}/api/v1/letters/user`, {\n        headers,\n      })\n      .subscribe((data) => {\n        this.refreshCollection$.next(data);\n        console.log(data, 'depuis refreshcollection');\n      });\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  collection(token) {\n    console.log(token, 'toekn depuis collection');\n    this.refreshCollection(token);\n    return this.refreshCollection$;\n  }\n\n  // je comment cette fonction pour tester avec le behavior chaud\n  updateUser(user, token): Observable<any> {\n    return this.http.patch(`${this.urlApi}/api/v1/letters/user`, user).pipe(\n      tap(() => {\n        this.refreshCollection(token);\n      })\n    );\n  }\n\n  // refreshCollection(data): void {\n  //   console.log('depuis refreshcollection', data);\n  //   return this.refreshCollection$.next(data);\n  // }\n\n  // tentative avec refresh collection\n  // updateUser(user): Observable<any> {\n  //   return this.http\n  //     .patch('http://localhost:4000/api/v1/letters/user', user)\n  //     .pipe(\n  //       tap(() => {\n  //         this.refreshCollection(this.token);\n  //       })\n  //     );\n  // }\n\n  // saveInfos(infos): Observable<any>{\n  //   console.log(infos, 'depuis')\n  //    return this.http.patch('http://localhost:4000/api/v1/letters/create-application', infos);\n  // }\n  createApplication(user): Observable<any> {\n    console.log(user, 'depuis');\n    return this.http.patch(\n      `${this.urlApi}/api/v1/letters/create-application`,\n      user\n    );\n  }\n\n  savedApplication(user, newValue, token): Observable<any> {\n    //console.log('data depuis saved application');\n\n    const data = Object.assign({});\n    data.user = user;\n    data.newValue = newValue;\n    //console.log(data);\n    return this.http\n      .patch(`${this.urlApi}/api/v1/letters/saved-application`, data)\n      .pipe(\n        tap(() => {\n          this.refreshCollection(token);\n        })\n      );\n  }\n\n  deleteApplication(user, letter, token): Observable<any> {\n    const data = Object.assign({});\n    data.user = user;\n    data.toRemove = letter;\n    return this.http\n      .patch(`${this.urlApi}/api/v1/letters/delete-application`, data)\n      .pipe(\n        tap(() => {\n          this.refreshCollection(token);\n        })\n      );\n  }\n\n  forgotPassword(email): Observable<any> {\n    console.log(email, 'depuis service');\n    return this.http.post(`${this.urlApi}/api/v1/letters/forgot-password`, {\n      email,\n    });\n  }\n\n  resetPassword(obj): Observable<any> {\n    console.log('depuis service', obj);\n\n    return this.http.post(`${this.urlApi}/api/v1/letters/reset-password/`, obj);\n  }\n\n  saveNewPassword(obj): Observable<any> {\n    console.log(obj);\n\n    return this.http.post(\n      `${this.urlApi}/api/v1/letters/save-new-password`,\n      obj\n    );\n  }\n\n  deleteUser(user: User): Observable<User> {\n    const { _id } = user;\n    console.log(_id);\n\n    return this.http.delete<User>(`${this.urlApi}/api/v1/letters/${_id}`);\n  }\n  // deleteUser(user: User) {\n  //   console.log(user);\n  // }\n}\n"],"names":["HttpClient","HttpHeaders","Injectable","BehaviorSubject","tap","environment","UsersService","constructor","http","urlApi","onSignUp","user","console","log","post","onLogin","refreshCollection","token","headers","set","get","subscribe","data","refreshCollection$","next","collection","updateUser","patch","pipe","createApplication","savedApplication","newValue","Object","assign","deleteApplication","letter","toRemove","forgotPassword","email","resetPassword","obj","saveNewPassword","deleteUser","_id","delete","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}