{"version":3,"file":"src_app_signup_signup_module_ts.js","mappings":"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","sources":["./src/app/services/password.service.ts","./src/app/services/users.service.ts","./src/app/signup/signup-routing.module.ts","./src/app/signup/signup.module.ts","./src/app/signup/signup.page.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { FormGroup, ValidatorFn } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PasswordService {\n  constructor() {}\n\n  // ici fonction pour vérifier que pwd et confirmpwd sont identiques\n  public verify(): ValidatorFn {\n    return (formGroup: FormGroup) => {\n      // on cherche pasword et confirmpassword\n      const pwd = formGroup.get('pwd').value;\n      const pwdConfirm = formGroup.get('pwdConfirm').value;\n      try {\n        // console.log(typeof(pwd.length), 'pwd');\n        if (!pwd || !pwdConfirm) {\n          console.log('inside improper');\n          return { improperLength: true };\n        }\n\n        //console.log(pwd.value);\n\n        if (pwd !== pwdConfirm) {\n          // retourner une erreur\n          return { verifyPassword: true };\n        }\n\n        // pwdConfirm = pwdConfirm?.value.trim();\n        // pwd = pwd.value?.trim();\n        return null;\n      } catch (error) {\n        console.log(error);\n        return { improperLength: true };\n      }\n    };\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../user/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersService {\n  private urlApi = environment.urlApi;\n\n  constructor(private http: HttpClient) {}\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  //token!: number;\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  private refreshCollection$: BehaviorSubject<any> = new BehaviorSubject<any>(\n    ''\n  );\n\n  // attention sans le typage, on ne récupère pas la valeur dans le subscribe !!!!\n  onSignUp(user): Observable<any> {\n    console.log(user, 'user');\n    return this.http.post<User>(`${this.urlApi}/api/v1/letters`, user);\n  }\n\n  onLogin(user): Observable<any> {\n    // const token = localStorage.getItem('token');\n    // let headers_object = new HttpHeaders().set(\n    //   'Authorization',\n    //   'Bearer ' + token\n    // );\n    console.log(user, 'user');\n    return this.http.post<User>(`${this.urlApi}/api/v1/letters/login`, user);\n    // ).pipe(\n    //   catchError(async (err) => console.log(err))\n    // );\n    // return this.http.post<User>(\n\n    // )\n  }\n\n  // je commente cette fonction pour des tests\n  // getUser(token): Observable<any> {\n  //   const headers = new HttpHeaders()\n  //     .set('content-type', 'application/json')\n  //     .set('Access-Control-Allow-Origin', '*')\n  //     .set('Authorization', 'Bearer ' + token);\n\n  //   return this.http.get('http://localhost:4000/api/v1/letters/user', {\n  //     headers,\n  //   });\n  // }\n\n  // getUser(token) {\n  //   const headers = new HttpHeaders()\n  //     .set('content-type', 'application/json')\n  //     .set('Access-Control-Allow-Origin', '*')\n  //     .set('Authorization', 'Bearer ' + token);\n  //   this.token = token;\n  //   this.refreshCollection(token, headers);\n  //   return this.refreshCollection$;\n  // }\n\n  refreshCollection(token): Observable<any> {\n    // console.log('depuis refreshcollection');\n    const headers = new HttpHeaders()\n      .set('content-type', 'application/json')\n      .set('Access-Control-Allow-Origin', '*')\n      .set('Authorization', 'Bearer ' + token);\n\n    this.http\n      .get(`${this.urlApi}/api/v1/letters/user`, {\n        headers,\n      })\n      .subscribe((data) => {\n        this.refreshCollection$.next(data);\n        console.log(data, 'depuis refreshcollection');\n      });\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  collection(token) {\n    console.log(token, 'toekn depuis collection');\n    this.refreshCollection(token);\n    return this.refreshCollection$;\n  }\n\n  // je comment cette fonction pour tester avec le behavior chaud\n  updateUser(user, token): Observable<any> {\n    return this.http.patch(`${this.urlApi}/api/v1/letters/user`, user).pipe(\n      tap(() => {\n        this.refreshCollection(token);\n      })\n    );\n  }\n\n  // refreshCollection(data): void {\n  //   console.log('depuis refreshcollection', data);\n  //   return this.refreshCollection$.next(data);\n  // }\n\n  // tentative avec refresh collection\n  // updateUser(user): Observable<any> {\n  //   return this.http\n  //     .patch('http://localhost:4000/api/v1/letters/user', user)\n  //     .pipe(\n  //       tap(() => {\n  //         this.refreshCollection(this.token);\n  //       })\n  //     );\n  // }\n\n  // saveInfos(infos): Observable<any>{\n  //   console.log(infos, 'depuis')\n  //    return this.http.patch('http://localhost:4000/api/v1/letters/create-application', infos);\n  // }\n  createApplication(user): Observable<any> {\n    console.log(user, 'depuis');\n    return this.http.patch(\n      `${this.urlApi}/api/v1/letters/create-application`,\n      user\n    );\n  }\n\n  savedApplication(user, newValue, token): Observable<any> {\n    //console.log('data depuis saved application');\n\n    const data = Object.assign({});\n    data.user = user;\n    data.newValue = newValue;\n    //console.log(data);\n    return this.http\n      .patch(`${this.urlApi}/api/v1/letters/saved-application`, data)\n      .pipe(\n        tap(() => {\n          this.refreshCollection(token);\n        })\n      );\n  }\n\n  deleteApplication(user, letter, token): Observable<any> {\n    const data = Object.assign({});\n    data.user = user;\n    data.toRemove = letter;\n    return this.http\n      .patch(`${this.urlApi}/api/v1/letters/delete-application`, data)\n      .pipe(\n        tap(() => {\n          this.refreshCollection(token);\n        })\n      );\n  }\n\n  forgotPassword(email): Observable<any> {\n    console.log(email, 'depuis service');\n    return this.http.post(`${this.urlApi}/api/v1/letters/forgot-password`, {\n      email,\n    });\n  }\n\n  resetPassword(obj): Observable<any> {\n    console.log('depuis service', obj);\n\n    return this.http.post(`${this.urlApi}/api/v1/letters/reset-password/`, obj);\n  }\n\n  saveNewPassword(obj): Observable<any> {\n    console.log(obj);\n\n    return this.http.post(\n      `${this.urlApi}/api/v1/letters/save-new-password`,\n      obj\n    );\n  }\n\n  deleteUser(user: User): Observable<User> {\n    const { _id } = user;\n    console.log(_id);\n\n    return this.http.delete<User>(`${this.urlApi}/api/v1/letters/${_id}`);\n  }\n  // deleteUser(user: User) {\n  //   console.log(user);\n  // }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignupPage } from './signup.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignupPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignupPageRoutingModule } from './signup-routing.module';\n\nimport { SignupPage } from './signup.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SignupPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [SignupPage]\n})\nexport class SignupPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { PasswordService } from '../services/password.service';\nimport { UsersService } from '../services/users.service';\nimport { User } from '../user/user';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.page.html',\n  styleUrls: ['./signup.page.scss'],\n})\nexport class SignupPage implements OnInit {\n  form!: FormGroup;\n\n  user: User = new User();\n\n  errorPwd!: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private usersService: UsersService,\n    private passwordService: PasswordService\n  ) {\n    console.log('test depuis le constructor');\n    const token = localStorage.getItem('token');\n    console.log(token);\n    if (token) {\n      try {\n        this.usersService.collection(token).subscribe(\n          (data) => {\n            // console.log(data.user, 'data');\n            //this.user = data.user;\n            console.log(data, 'user');\n            if (data) {\n              this.user = data.user;\n              this.router.navigate(['tabs', 'tab1']);\n            } else {\n              console.log('pas de data');\n              this.router.navigate(['/']);\n            }\n          },\n\n          (e) => {\n            console.log(e, 'error');\n          }\n        );\n      } catch (error) {\n        console.log(error, 'error');\n      }\n    }\n  }\n\n  ngOnInit() {\n    this.form = this.fb.group(\n      {\n        email: ['', [Validators.required, Validators.email]],\n        pwd: ['', [Validators.required, Validators.minLength(7)]],\n        pwdConfirm: ['', [Validators.required, Validators.minLength(7)]],\n      },\n      {\n        validators: [this.passwordService.verify()],\n      }\n    );\n  }\n\n  onSubmit() {\n    this.errorPwd = '';\n    // on donne des nouvelles valeurs à this.user\n    const { pwd, pwdConfirm } = this.form.value;\n\n    // capter l'erreur\n\n    // if (!pwd || !pwdConfirm) {\n    //   console.log('pas de valeur');\n    //   this.errorPwd = 'Les champs ne peuvent pas être vides';\n    //   return console.log('champs vides');\n    // }\n\n    // if (pwd !== pwdConfirm) {\n    //   this.errorPwd = 'Les mots de passe ne sont pas identiques';\n    //   return console.log('pas le meme pwd');\n    // }\n\n    this.user = Object.assign(this.user, this.form.value);\n    console.log(this.user, 'user');\n\n    this.usersService.onSignUp(this.user).subscribe(\n      (data) => {\n        console.log(data.token, 'return');\n\n        // store jwt token in local storage\n        // console.log(token, 'token');\n        localStorage.setItem('token', data.token);\n        this.router.navigate(['tabs/tab1']);\n        this.form.reset();\n      },\n      (e) => {\n        console.log(e, 'erreur');\n        // afficher cette erreur dans le front\n        this.errorPwd = e.error.msg;\n        this.form.reset();\n      }\n    );\n  }\n}\n"],"names":["HttpClient","HttpHeaders","Injectable","BehaviorSubject","tap","environment","UsersService","constructor","http","urlApi","onSignUp","user","console","log","post","onLogin","refreshCollection","token","headers","set","get","subscribe","data","refreshCollection$","next","collection","updateUser","patch","pipe","createApplication","savedApplication","newValue","Object","assign","deleteApplication","letter","toRemove","forgotPassword","email","resetPassword","obj","saveNewPassword","deleteUser","_id","delete","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}